//CREATE for all participant assets will be done by network admin
//READ for all transactions (history) will be done by network admin

// user-related
rule userBranch{
  description: "Branch (Authority) has all access to user asset."
  participant(p): "org.acme.artbook.Branch"
  operation: ALL
  resource(r): "org.acme.artbook.User"
  condition: (true)
  action: ALLOW
}

rule userSelf{
  description: "User can view and update himself"
  participant(p): "org.acme.artbook.User"
  operation: READ, UPDATE
  resource(r): "org.acme.artbook.User"
  condition: (p.getIdentifier() == r.getIdentifier())
  action: ALLOW
}

rule userAgency{
  description: "Agency can view all users (in order to verify their identities for transactions)"
  participant(p): "org.acme.artbook.Agency"
  operation: READ
  resource(r): "org.acme.artbook.User"
  condition: (true)
  action: ALLOW
}

rule userPolice{
  description: "Police (Authority) can view all users"
  participant(p): "org.acme.artbook.Police"
  operation: READ
  resource(r): "org.acme.artbook.User"
  condition: (true)
  action: ALLOW
}

// authority-related
rule branchView{
  description: "Branch can view all branches"
  participant(p): "org.acme.artbook.Branch"
  operation: READ
  resource(r): "org.acme.artbook.Branch"
  condition: (true)
  action: ALLOW
}

rule policeView{
  description: "Police can view all polices"
  participant(p): "org.acme.artbook.Police"
  operation: READ
  resource(r): "org.acme.artbook.Police"
  condition: (true)
  action: ALLOW
}

// agency-related
rule agencyView{
  description: "All participants can view agency"
  participant(p): "org.hyperledger.composer.system.Participant"
  operation: READ
  resource(r): "org.acme.artbook.Agency"
  condition: (true)
  action: ALLOW
}

// artwork-related
rule artworkUser{
  description: "User can only view artworks if he is the owner"
  participant(p): "org.acme.artbook.User"
  operation: READ
  resource(r): "org.acme.artbook.Artwork"
  condition: (p.getIdentifier() == r.owner.getIdentifier())
  action: ALLOW
}

rule artworkBranch{
  description: "Branch (Authority) have all access to artwork asset"
  participant(p): "org.acme.artbook.Branch"
  operation: ALL
  resource(r): "org.acme.artbook.Artwork"
  condition: (true)
  action: ALLOW
}

rule artworkPoliceView{
  description: "Police (Authority) can view artworks"
  participant(p): "org.acme.artbook.Police"
  operation: READ
  resource(r): "org.acme.artbook.Artwork"
  condition: (true)
  action: ALLOW
}

rule artworkAgencyView{
  description: "Agency can view artwork asset"
  participant(p): "org.acme.artbook.Agency"
  operation: READ
  resource(r): "org.acme.artbook.Artwork"
  condition: (true)
  action: ALLOW
}

// transaction-related: markMissingArtwork
rule policeSubmitMarkTransaction{
  description: "Police (Authority) can submit Transaction-markMissing"
  participant(p): "org.acme.artbook.Police"
  operation: CREATE
  resource(r): "org.acme.artbook.markMissingArtwork" condition: (true)
  action: ALLOW
}

rule policeMarkMissing{
  description: "Police (Authority) can update artwork through Transaction-markMissing"
  participant(p): "org.acme.artbook.Police"
  operation: UPDATE
  resource(r): "org.acme.artbook.Artwork"
  transaction(tx): "org.acme.artbook.markMissingArtwork"
  condition: (true)
  action: ALLOW
}

// transaction-related: recoverMissingArtwork
rule policeSubmitRecoverTransaction{
  description: "Police (Authority) can submit Transaction-recoverMissing"
  participant(p): "org.acme.artbook.Police"
  operation: CREATE
  resource(r): "org.acme.artbook.recoverMissingArtwork"
  condition: (true)
  action: ALLOW
}

rule policeRecoverMissing{
  description: "Police (Authority) can update artwork through Transaction-recoverMissing"
  participant(p): "org.acme.artbook.Police"
  operation: UPDATE
  resource(r): "org.acme.artbook.Artwork"
  transaction(tx): "org.acme.artbook.recoverMissingArtwork"
  condition: (true)
  action: ALLOW
}

// transaction-related: consentForSale
rule ownerSubmitConsentTransaction{
  description: "User can submit Transaction-consentForSale"
  participant(p): "org.acme.artbook.User"
  operation: CREATE
  resource(r): "org.acme.artbook.consentArtworkForSale"
  condition: ((r.art.lost == false) && (r.art.onSale == false))
  action: ALLOW
}

rule ownerConsentForSale{
  description: "User can update artwork asset through Transaction-consentArtworkForSale"
  participant(p): "org.acme.artbook.User"
 operation: UPDATE
  resource(r): "org.acme.artbook.Artwork"
  transaction(tx): "org.acme.artbook.consentArtworkForSale"
  condition: (p.getIdentifier() == tx.art.owner.getIdentifier())
  action: ALLOW
}

// transaction-related: requestForDeposit
rule agencySubmitRequestTransaction{
  description: "Agency can submit Transaction-requestForDeposit "
  participant(p): "org.acme.artbook.Agency"
  operation: CREATE
  resource(r): "org.acme.artbook.requestForDeposit"
  condition: (true)
  action: ALLOW
}

rule agencyRequestForDeposit{
  description: "Agency can update artwork asset through Transaction-requestForDeposit if it is the handler of the on_sale artwork"
  participant(p): "org.acme.artbook.Agency"
  operation: UPDATE
  resource(r): "org.acme.artbook.Artwork"
  transaction(tx): "org.acme.artbook.requestForDeposit"
  condition: (p.getIdentifier() == tx.art.handler.getIdentifier())
  action: ALLOW
}

// transaction-related: confirmDeposit
rule buyerSubmitConfirmTransaction{
  description: "User can submit Transaction-confirmDeposit if the deposit is verified by third-party payment partner"
  participant(p): "org.acme.artbook.User"
  operation: CREATE
  resource(r): "org.acme.artbook.confirmDeposit"
  condition: (true)
  action: ALLOW
}

rule buyerConfirmDeposit{
  description: "User can update artwork asset through Transaction-confirmDeposit"
  participant(p): "org.acme.artbook.Agency"
  operation: UPDATE
  resource(r): "org.acme.artbook.Artwork"
  transaction(tx): "org.acme.artbook.confirmDeposit"
  condition: (p.getIdentifier() == tx.buyer.getIdentifier())
  action: ALLOW
}


// transaction-related: transferOwernship
rule ownerSubmitTransferTransaction{
  description: "User can submit Transaction-transferOwnership"
  participant(p): "org.acme.artbook.User"
  operation: CREATE
  resource(r): "org.acme.artbook.transferOwnership"
  condition: (true)
  action: ALLOW
}

rule ownerTransferOwnership{
  description: "User can update artwork asset through Transaction-consentArtworkForSale"
  participant(p): "org.acme.artbook.User"
  operation: UPDATE
  resource(r): "org.acme.artbook.Artwork"
  transaction(tx): "org.acme.artbook.transferOwnership"
  condition: (p.getIdentifier() == tx.art.owner.getIdentifier())
  action: ALLOW
}

// document-related
rule documentBranch{
  description: "Branch have all access supporting document asset "
  participant(p): "org.acme.artbook.Branch"
  operation: ALL
  resource(r): "org.acme.artbook.SupportingDocument"
  condition: (true)
  action: ALLOW
}

rule documentPolice{
  description: "Police can create and view supporting document asset "
  participant(p): "org.acme.artbook.Police"
  operation: CREATE, READ
  resource(r): "org.acme.artbook.SupportingDocument"
  condition: (true)
  action: ALLOW
}

rule documentAgency{
  description: "Agency can view supporting document asset "
  participant(p): "org.acme.artbook.Agency"
  operation: READ
  resource(r): "org.acme.artbook.SupportingDocument"
  condition: (true)
  action: ALLOW
}

rule documentUser{
  description: "User can view supporting documents of the artworks he owns"
  participant(p): "org.acme.artbook.User"
  operation: READ
  resource(r): "org.acme.artbook.SupportingDocument"
  condition: (p.getIdentifier() == r.art.owner.getIdentifier())
  action: ALLOW
}


// System Access
rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}